# Development Environment
# Remote Firebase Development Project に接続

services:
  frontend:
    extends:
      file: base.yml
      service: frontend
    env_file:
      - .env.dev
    environment:
      - NODE_ENV=development
      - FIREBASE_ENV=development
      # Firebase variables will be loaded from .env.dev via env_file
      # No emulator settings - connects to real Firebase
    command: npm run dev
    networks:
      - haircut-network

  # Backend functionality is provided by Firebase Cloud Functions in production
  # Database functionality is provided by Firebase Firestore in production

  # Monitoring for development
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ../monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - haircut-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3030:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD_DEV:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - haircut-network

volumes:
  prometheus-data:
  grafana-data:

networks:
  haircut-network:
    driver: bridge
