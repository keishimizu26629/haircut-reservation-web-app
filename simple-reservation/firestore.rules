rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isStaff() {
      return request.auth != null && request.auth.token.staff == true;
    }
    
    // Validate reservation data structure
    function hasValidReservationData() {
      return request.resource.data.keys().hasAll([
        'date', 'timeSlot', 'content', 'category', 'status'
      ]) &&
      request.resource.data.date is timestamp &&
      request.resource.data.timeSlot is string &&
      request.resource.data.content is string &&
      request.resource.data.category is string &&
      request.resource.data.status in ['available', 'booked', 'blocked'];
    }
    
    // Reservations collection - core data structure
    match /reservations/{reservationId} {
      allow read: if isAuthenticated();
      allow create, update: if isStaff() && hasValidReservationData();
      allow delete: if isStaff();
    }
    
    // Settings collection for app configuration
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isStaff();
    }
    
    // Staff authentication and profiles
    match /staff/{staffId} {
      allow read, write: if isAuthenticated() && 
                            (request.auth.uid == staffId || isStaff());
    }
    
    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}