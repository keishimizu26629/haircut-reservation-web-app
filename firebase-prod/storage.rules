rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.admin == true;
    }
    
    function isStaff() {
      return request.auth != null && 
             (request.auth.token.admin == true || 
              request.auth.token.staff == true);
    }
    
    // Validate file size (max 10MB for images, 50MB for documents)
    function isValidImageSize() {
      return resource.size < 10 * 1024 * 1024;
    }
    
    function isValidDocumentSize() {
      return resource.size < 50 * 1024 * 1024;
    }
    
    // Validate file types
    function isImageFile() {
      return resource.contentType.matches('image/.*');
    }
    
    function isDocumentFile() {
      return resource.contentType.matches('(application/pdf|application/msword|application/vnd.openxmlformats-officedocument.wordprocessingml.document)');
    }
    
    // User profile images
    match /users/{userId}/profile/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isImageFile() && 
                      isValidImageSize();
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }
    
    // Staff profile images
    match /staff/{staffId}/profile/{imageId} {
      allow read: if true; // Public read access for staff photos
      allow write: if isStaff() && isImageFile() && isValidImageSize();
      allow delete: if isAdmin();
    }
    
    // Service/menu images
    match /services/{serviceId}/images/{imageId} {
      allow read: if true; // Public read access
      allow write: if isStaff() && isImageFile() && isValidImageSize();
      allow delete: if isStaff();
    }
    
    // Before/after photos for services
    match /gallery/{galleryId}/{imageId} {
      allow read: if true; // Public read access
      allow write: if isStaff() && isImageFile() && isValidImageSize();
      allow delete: if isStaff();
    }
    
    // Business documents (receipts, certificates, etc.)
    match /documents/{tenantId}/{documentId} {
      allow read: if isAuthenticated() && isStaff();
      allow write: if isStaff() && 
                      (isImageFile() || isDocumentFile()) && 
                      (isValidImageSize() || isValidDocumentSize());
      allow delete: if isAdmin();
    }
    
    // Customer uploaded images (for consultations)
    match /consultations/{customerId}/{imageId} {
      allow read: if isAuthenticated() && (isOwner(customerId) || isStaff());
      allow write: if isAuthenticated() && 
                      isOwner(customerId) && 
                      isImageFile() && 
                      isValidImageSize();
      allow delete: if isAuthenticated() && (isOwner(customerId) || isAdmin());
    }
    
    // Temporary uploads (auto-delete after 24 hours)
    match /temp/{userId}/{uploadId} {
      allow read, write: if isAuthenticated() && 
                           isOwner(userId) && 
                           isImageFile() && 
                           isValidImageSize();
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }
    
    // System assets (logos, templates, etc.)
    match /assets/{assetType}/{assetId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Backup files
    match /backups/{backupId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
      allow delete: if false; // Prevent accidental deletion
    }
    
    // Default deny rule
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}